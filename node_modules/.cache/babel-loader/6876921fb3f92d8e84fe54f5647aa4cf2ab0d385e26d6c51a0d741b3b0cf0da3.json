{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React Learning Part 2\\\\ReactLearnings-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2c3b4c';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Hacker\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my.3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Enter the text to analyze below\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"9NTKcJ11NClCY8iNfVhjrrH6X6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","Router","title","fileName","_jsxFileName","lineNumber","columnNumber","className","Switch","path","About","heading","Home","_c","$RefreshReg$"],"sources":["D:/React/React Learning Part 2/ReactLearnings-main/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport { Route,  } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode,setMode]  = useState('light');   // whether dark mode is enabled or not\n  const [alert, setAlert]= useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 5000);\n  }\n  const toggleMode =()=>{\n  if(mode==='light'){\n  setMode('dark');\n  document.body.style.backgroundColor = '#2c3b4c';\n  showAlert(\"Dark mode has been enabled\",\"success\");\n}\n\nelse{\n  setMode('light');\n  document.body.style.backgroundColor = 'white';\n  showAlert(\"light mode has been enabled\",\"success\");\n}\n}\nreturn (\n<>\n{/* {<Navbar title=\"Hacker\" aboutText=\"About Hacker\"/>}\n{<Navbar/>} */}\n<Router>\n  \n<Navbar title=\"Hacker\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my.3\">\n<Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          \n<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n{/* <About/> */}\n\n\n</div></Router>\n    </>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}