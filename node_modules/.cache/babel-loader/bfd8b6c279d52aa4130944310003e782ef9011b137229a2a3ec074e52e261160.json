{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ReactLearnings\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// State and Event handler \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    //console.log(\"Upprcase was clicked: \"+ text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    //console.log(\"On change\");\n    setText(event.target.value);\n  };\n  // Declare a new state variable, which we'll call \"count\"\n  const [text, setText] = useState('Enter text here');\n  // text=\"new text\"; // wrong way to change the state\n  // setText(\"new text\"); //correct way to change the state\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn.primary\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containe my -3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"  \", text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"  \", 0.008 * text.split(\" \").length, \" Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["D:/React/ReactLearnings/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\n// State and Event handler \r\nexport default function TextForm(props) {\r\nconst handleUpClick=()=>{\r\n  //console.log(\"Upprcase was clicked: \"+ text);\r\n  let newText = text.toUpperCase();\r\n  setText(newText)\r\n}\r\nconst handleOnChange=(event)=>{\r\n    //console.log(\"On change\");\r\n    setText(event.target.value);\r\n}\r\n // Declare a new state variable, which we'll call \"count\"\r\nconst [text, setText] = useState('Enter text here');\r\n// text=\"new text\"; // wrong way to change the state\r\n// setText(\"new text\"); //correct way to change the state\r\n  return (\r\n<>\r\n<div className=\"container\" >\r\n<h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn.primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n</div>\r\n<div className=\"containe my -3\">\r\n<h1> Your text summary</h1> \r\n<p>  {text.split(\" \").length} words and {text.length} characters</p>\r\n<p>  {0.008* text.split(\" \").length} Minutes read</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAMC,aAAa,GAACA,CAAA,KAAI;IACtB;IACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,EAAE;IAChCC,OAAO,CAACH,OAAO,CAAC;EAClB,CAAC;EACD,MAAMI,cAAc,GAAEC,KAAK,IAAG;IAC1B;IACAF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACA;EACD,MAAM,CAACN,IAAI,EAAEE,OAAO,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;EACnD;EACA;EACE,oBACFE,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACAf,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1Bf,OAAA;QAAAe,QAAA,EAAKX,KAAK,CAACa;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxBrB,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAD,QAAA,eACrBf,OAAA;UAAUgB,SAAS,EAAC,cAAc;UAACF,KAAK,EAAEN,IAAK;UAACc,QAAQ,EAAEX,cAAe;UAACY,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAY;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnG,eACNrB,OAAA;QAAQgB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEnB,aAAc;QAAAS,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnF,eACNrB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC/Bf,OAAA;QAAAe,QAAA,EAAI;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC3BrB,OAAA;QAAAe,QAAA,GAAG,IAAE,EAACP,IAAI,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAACnB,IAAI,CAACmB,MAAM,EAAC,aAAW;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACpErB,OAAA;QAAAe,QAAA,GAAG,IAAE,EAAC,KAAK,GAAEP,IAAI,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,eAAa;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C;EAAA,gBACH;AAEH;AAAChB,EAAA,CA9BuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}