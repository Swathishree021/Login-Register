{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ReactLearnings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2c3b4c';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Hacker\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my.3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9NTKcJ11NClCY8iNfVhjrrH6X6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/React/ReactLearnings/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n//import About from './components/About';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode,setMode]  = useState('light');   // whether dark mode is enabled or not\r\n  const [alert, setAlert]= useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      message: message,\r\n      type:type\r\n    })\r\n  }\r\n  const toggleMode =()=>{\r\n  if(mode==='light'){\r\n  setMode('dark');\r\n  document.body.style.backgroundColor = '#2c3b4c';\r\n  showAlert(\"Dark mode has been enabled\", \"success\");\r\n}\r\n\r\nelse{\r\n  setMode('light');\r\n  document.body.style.backgroundColor = 'white';\r\n  showAlert(\"light mode has been enabled\", \"success\");\r\n}\r\n}\r\nreturn (\r\n<>\r\n{/* {<Navbar title=\"Hacker\" aboutText=\"About Hacker\"/>}\r\n{<Navbar/>} */}\r\n<Navbar title=\"Hacker\" mode={mode} toggleMode={toggleMode}/>\r\n<Alert alert={alert}/>\r\n<div className=\"container my.3\">\r\n<TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\r\n{/* <About/> */}\r\n</div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAIT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAG;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAEX,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPE,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAACA;IACP,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,UAAU,GAAEA,CAAA,KAAI;IACtB,IAAGP,IAAI,KAAG,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CP,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MAEG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CP,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACA,CAAC;EACD,oBACAT,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBAGAjB,OAAA,CAACN,MAAM;MAACwB,KAAK,EAAC,QAAQ;MAACb,IAAI,EAAEA,IAAK;MAACO,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5DtB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtBtB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC/BjB,OAAA,CAACL,QAAQ;QAAC6B,OAAO,EAAC,iCAAiC;QAACnB,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3D;EAAA,gBACC;AAEP;AAAClB,EAAA,CAnCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}